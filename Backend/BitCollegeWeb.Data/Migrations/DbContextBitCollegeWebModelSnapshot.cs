// <auto-generated />
using System;
using BitCollegeWeb.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BitCollegeWeb.Infrastructure.Migrations
{
    [DbContext(typeof(DbContextBitCollegeWeb))]
    partial class DbContextBitCollegeWebModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BitCollegeWeb.Domain.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("announcement_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateLimit")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_limit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("AnnouncementId");

                    b.HasIndex("SectionId");

                    b.ToTable("announcement");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assignment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalificationAssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("calification_assignment_id");

                    b.Property<DateTime>("DateLimit")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_limit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("DocumentLink")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("document_link");

                    b.Property<bool>("PendingComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("pending_complete")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<bool>("SentNotSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("sent_notsent")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("shipping_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("AssignmentId");

                    b.HasIndex("CalificationAssignmentId");

                    b.HasIndex("SectionId");

                    b.ToTable("assignment");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationAssignment", b =>
                {
                    b.Property<int>("CalificationAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("calification_assignment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comment");

                    b.Property<bool>("CommentPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("comment_published")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Note")
                        .HasColumnType("int")
                        .HasColumnName("note");

                    b.HasKey("CalificationAssignmentId");

                    b.ToTable("calification_assignment");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationExam", b =>
                {
                    b.Property<int>("CalificationExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("calification_exam_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Note")
                        .HasColumnType("int")
                        .HasColumnName("note");

                    b.HasKey("CalificationExamId");

                    b.ToTable("calification_exam");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationSystem", b =>
                {
                    b.Property<int>("CalificationSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("calification_system_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalificationSystemCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("calification_system_code");

                    b.HasKey("CalificationSystemId");

                    b.ToTable("calification_system");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationSystemTypeCalification", b =>
                {
                    b.Property<int>("CalificationSystemId")
                        .HasColumnType("int")
                        .HasColumnName("calification_system_id");

                    b.Property<int>("TypeCalificationId")
                        .HasColumnType("int")
                        .HasColumnName("type_calification_id");

                    b.Property<int>("NumberPercentage")
                        .HasColumnType("int")
                        .HasColumnName("number_percentage");

                    b.HasKey("CalificationSystemId", "TypeCalificationId");

                    b.HasIndex("TypeCalificationId");

                    b.ToTable("calification_system_type_calification");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chat_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassroomId")
                        .HasColumnType("int")
                        .HasColumnName("classroom_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("content");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.HasKey("ChatId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("TeacherId");

                    b.ToTable("chat");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("classroom_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_start");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<int>("TeacherForumId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_forum_id");

                    b.HasKey("ClassroomId");

                    b.HasIndex("SectionId");

                    b.HasIndex("TeacherForumId")
                        .IsUnique();

                    b.ToTable("classroom");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ClassroomExternalTool", b =>
                {
                    b.Property<int>("ExternalToolId")
                        .HasColumnType("int")
                        .HasColumnName("external_tool_id");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int")
                        .HasColumnName("classroom_id");

                    b.HasKey("ExternalToolId", "ClassroomId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("classroom_external_tool");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("company_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("CompanyId");

                    b.ToTable("company");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("day_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("DayId");

                    b.ToTable("day");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Evidence", b =>
                {
                    b.Property<int>("EvidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("evidence_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EvidenceLink")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("evidence_link");

                    b.Property<int>("TeacherForumId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_forum_id");

                    b.HasKey("EvidenceId");

                    b.HasIndex("TeacherForumId");

                    b.ToTable("evidence");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exam_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalificationExamId")
                        .HasColumnType("int")
                        .HasColumnName("calification_exam_id");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_start");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<int>("FinishTime")
                        .HasColumnType("int")
                        .HasColumnName("finish_time");

                    b.Property<bool>("PendingComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("pending_complete")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<bool>("SentNotSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("sent_notsent")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("StartTime")
                        .HasColumnType("int")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("ExamId");

                    b.HasIndex("CalificationExamId");

                    b.HasIndex("SectionId");

                    b.ToTable("exam");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ExternalTool", b =>
                {
                    b.Property<int>("ExternalToolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("external_tool_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("ExternalToolId");

                    b.ToTable("external_tool");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.GeneralInformation", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topic_id");

                    b.Property<int>("ProgrammingStudyId")
                        .HasColumnType("int")
                        .HasColumnName("programming_study_id");

                    b.HasKey("TopicId", "ProgrammingStudyId");

                    b.HasIndex("ProgrammingStudyId");

                    b.ToTable("general_information");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Inscription", b =>
                {
                    b.Property<int>("InscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inscription_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_inscription");

                    b.Property<int>("ProgrammingStudyId")
                        .HasColumnType("int")
                        .HasColumnName("programming_study_id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.HasKey("InscriptionId");

                    b.HasIndex("ProgrammingStudyId");

                    b.HasIndex("StudentId");

                    b.ToTable("inscription");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Institution", b =>
                {
                    b.Property<int>("InstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("institution_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("InstitutionId");

                    b.ToTable("institution");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("NotificationId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("notification");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ProgrammingStudy", b =>
                {
                    b.Property<int>("ProgrammingStudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("programming_study_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalificationSystemId")
                        .HasColumnType("int")
                        .HasColumnName("calification_system_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<int>("TypeProgrammingClassId")
                        .HasColumnType("int")
                        .HasColumnName("type_programming_class_id");

                    b.Property<int>("TypeStudyId")
                        .HasColumnType("int")
                        .HasColumnName("type_study_id");

                    b.HasKey("ProgrammingStudyId");

                    b.HasIndex("CalificationSystemId")
                        .IsUnique();

                    b.HasIndex("TypeProgrammingClassId");

                    b.HasIndex("TypeStudyId");

                    b.ToTable("programming_study");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("registration_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("password");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.HasKey("RegistrationId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("registration");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int>("TypeProgrammingClassId")
                        .HasColumnType("int")
                        .HasColumnName("type_programming_class_id");

                    b.HasKey("ScheduleId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TypeProgrammingClassId")
                        .IsUnique();

                    b.ToTable("schedule");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ScheduleDay", b =>
                {
                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    b.Property<int>("DayId")
                        .HasColumnType("int")
                        .HasColumnName("day_id");

                    b.Property<int>("FinishTime")
                        .HasColumnType("int")
                        .HasColumnName("finish_time");

                    b.Property<int>("StartTime")
                        .HasColumnType("int")
                        .HasColumnName("start_time");

                    b.HasKey("ScheduleId", "DayId");

                    b.HasIndex("DayId");

                    b.ToTable("schedule_day");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("section_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberRecordings")
                        .HasColumnType("int")
                        .HasColumnName("number_recordings");

                    b.Property<int>("NumberStudentsEnroll")
                        .HasColumnType("int")
                        .HasColumnName("number_students_enroll");

                    b.Property<int>("ProgrammingStudyId")
                        .HasColumnType("int")
                        .HasColumnName("programming_study_id");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("section_code");

                    b.Property<bool>("Vacancies")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("vacancies")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("SectionId");

                    b.HasIndex("ProgrammingStudyId")
                        .IsUnique();

                    b.ToTable("section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.SectionTypeSection", b =>
                {
                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<int>("TypeSectionId")
                        .HasColumnType("int")
                        .HasColumnName("type_section_id");

                    b.HasKey("SectionId", "TypeSectionId");

                    b.HasIndex("TypeSectionId");

                    b.ToTable("section_type_section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentExperienceId")
                        .HasColumnType("int")
                        .HasColumnName("student_experience_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentExperienceId")
                        .IsUnique();

                    b.ToTable("student");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.StudentExperience", b =>
                {
                    b.Property<int>("StudentExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_experience_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStartProgramming")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_start_programming");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int")
                        .HasColumnName("institution_id");

                    b.HasKey("StudentExperienceId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("student_experience");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.StudentSection", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.HasKey("StudentId", "SectionId");

                    b.HasIndex("SectionId");

                    b.ToTable("student_section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherExperienceId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_experience_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId");

                    b.HasIndex("TeacherExperienceId")
                        .IsUnique();

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherExperience", b =>
                {
                    b.Property<int>("TeacherExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_experience_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("DateStartProgramming")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_start_programming");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("position");

                    b.HasKey("TeacherExperienceId");

                    b.HasIndex("CompanyId");

                    b.ToTable("teacher_experience");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherForum", b =>
                {
                    b.Property<int>("TeacherForumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_forum_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("ProblemDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("problem_description");

                    b.HasKey("TeacherForumId");

                    b.ToTable("teacher_forum");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherSection", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.HasKey("TeacherId", "SectionId");

                    b.HasIndex("SectionId");

                    b.ToTable("teacher_section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("topic_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("TopicId");

                    b.ToTable("topic");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeCalification", b =>
                {
                    b.Property<int>("TypeCalificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_calification_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("TypeCalificationId");

                    b.ToTable("type_calification");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeProgrammingClass", b =>
                {
                    b.Property<int>("TypeProgrammingClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_programming_class_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("TypeProgrammingClassId");

                    b.ToTable("type_programming_class");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeSection", b =>
                {
                    b.Property<int>("TypeSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_section_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("TypeSectionId");

                    b.ToTable("type_section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeStudy", b =>
                {
                    b.Property<int>("TypeStudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_study_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("TypeStudyId");

                    b.ToTable("type_study");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.URL", b =>
                {
                    b.Property<int>("UrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("url_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExternalToolId")
                        .HasColumnType("int")
                        .HasColumnName("external_tool_id");

                    b.Property<int?>("TopicId")
                        .HasColumnType("int")
                        .HasColumnName("topic_id");

                    b.Property<string>("UrlLink")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("url_link");

                    b.HasKey("UrlId");

                    b.HasIndex("ExternalToolId");

                    b.HasIndex("TopicId");

                    b.ToTable("url");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Announcement", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("Announcements")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Assignment", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.CalificationAssignment", "CalificationAssignment")
                        .WithMany("Assignments")
                        .HasForeignKey("CalificationAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("Assignments")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalificationAssignment");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationSystemTypeCalification", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.CalificationSystem", "CalificationSystem")
                        .WithMany("CalificationSystemTypeCalifications")
                        .HasForeignKey("CalificationSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.TypeCalification", "TypeCalification")
                        .WithMany("CalificationSystemTypeCalifications")
                        .HasForeignKey("TypeCalificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalificationSystem");

                    b.Navigation("TypeCalification");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Chat", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Classroom", "Classroom")
                        .WithMany("Chats")
                        .HasForeignKey("ClassroomId");

                    b.HasOne("BitCollegeWeb.Domain.Teacher", "Teacher")
                        .WithMany("Chats")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Classroom");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Classroom", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("Classrooms")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.TeacherForum", "TeacherForum")
                        .WithOne("Classroom")
                        .HasForeignKey("BitCollegeWeb.Domain.Classroom", "TeacherForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("TeacherForum");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ClassroomExternalTool", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Classroom", "Classroom")
                        .WithMany("ClassroomExternalTools")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.ExternalTool", "ExternalTool")
                        .WithMany("ClassroomExternalTools")
                        .HasForeignKey("ExternalToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("ExternalTool");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Evidence", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.TeacherForum", "TeacherForum")
                        .WithMany("Evidences")
                        .HasForeignKey("TeacherForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherForum");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Exam", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.CalificationExam", "CalificationExam")
                        .WithMany("Exams")
                        .HasForeignKey("CalificationExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("Exams")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalificationExam");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.GeneralInformation", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.ProgrammingStudy", "ProgrammingStudy")
                        .WithMany("GeneralInformations")
                        .HasForeignKey("ProgrammingStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Topic", "Topic")
                        .WithMany("GeneralInformations")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgrammingStudy");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Inscription", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.ProgrammingStudy", "ProgrammingStudy")
                        .WithMany("Inscriptions")
                        .HasForeignKey("ProgrammingStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Student", "Student")
                        .WithMany("Inscriptions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgrammingStudy");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Notification", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Student", "Student")
                        .WithMany("Notifications")
                        .HasForeignKey("StudentId");

                    b.HasOne("BitCollegeWeb.Domain.Teacher", "Teacher")
                        .WithMany("Notifications")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ProgrammingStudy", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.CalificationSystem", "CalificationSystem")
                        .WithOne("ProgrammingStudy")
                        .HasForeignKey("BitCollegeWeb.Domain.ProgrammingStudy", "CalificationSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.TypeProgrammingClass", "TypeProgrammingClass")
                        .WithMany("ProgrammingStudies")
                        .HasForeignKey("TypeProgrammingClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.TypeStudy", "TypeStudy")
                        .WithMany("ProgrammingStudies")
                        .HasForeignKey("TypeStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalificationSystem");

                    b.Navigation("TypeProgrammingClass");

                    b.Navigation("TypeStudy");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Registration", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Student", "Student")
                        .WithMany("Registrations")
                        .HasForeignKey("StudentId");

                    b.HasOne("BitCollegeWeb.Domain.Teacher", "Teacher")
                        .WithMany("Registrations")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Schedule", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Student", "Student")
                        .WithMany("Schedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.TypeProgrammingClass", "TypeProgrammingClass")
                        .WithOne("Schedule")
                        .HasForeignKey("BitCollegeWeb.Domain.Schedule", "TypeProgrammingClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("TypeProgrammingClass");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ScheduleDay", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Day", "Day")
                        .WithMany("ScheduleDays")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Schedule", "Schedule")
                        .WithMany("ScheduleDays")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Section", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.ProgrammingStudy", "ProgrammingStudy")
                        .WithOne("Section")
                        .HasForeignKey("BitCollegeWeb.Domain.Section", "ProgrammingStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgrammingStudy");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.SectionTypeSection", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("SectionTypeSections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.TypeSection", "TypeSection")
                        .WithMany("SectionTypeSections")
                        .HasForeignKey("TypeSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("TypeSection");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Student", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.StudentExperience", "StudentExperience")
                        .WithOne("Student")
                        .HasForeignKey("BitCollegeWeb.Domain.Student", "StudentExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentExperience");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.StudentExperience", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Institution", "Institution")
                        .WithMany("StudentExperiences")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.StudentSection", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("StudentSections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Student", "Student")
                        .WithMany("StudentSections")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Teacher", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.TeacherExperience", "TeacherExperience")
                        .WithOne("Teacher")
                        .HasForeignKey("BitCollegeWeb.Domain.Teacher", "TeacherExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherExperience");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherExperience", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Company", "Company")
                        .WithMany("TeacherExperiences")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherSection", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.Section", "Section")
                        .WithMany("TeacherSections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitCollegeWeb.Domain.Teacher", "Teacher")
                        .WithMany("TeacherSections")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.URL", b =>
                {
                    b.HasOne("BitCollegeWeb.Domain.ExternalTool", "ExternalTool")
                        .WithMany("URLS")
                        .HasForeignKey("ExternalToolId");

                    b.HasOne("BitCollegeWeb.Domain.Topic", "Topic")
                        .WithMany("URLS")
                        .HasForeignKey("TopicId");

                    b.Navigation("ExternalTool");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationAssignment", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationExam", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.CalificationSystem", b =>
                {
                    b.Navigation("CalificationSystemTypeCalifications");

                    b.Navigation("ProgrammingStudy");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Classroom", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("ClassroomExternalTools");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Company", b =>
                {
                    b.Navigation("TeacherExperiences");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Day", b =>
                {
                    b.Navigation("ScheduleDays");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ExternalTool", b =>
                {
                    b.Navigation("ClassroomExternalTools");

                    b.Navigation("URLS");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Institution", b =>
                {
                    b.Navigation("StudentExperiences");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.ProgrammingStudy", b =>
                {
                    b.Navigation("GeneralInformations");

                    b.Navigation("Inscriptions");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Schedule", b =>
                {
                    b.Navigation("ScheduleDays");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Section", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Assignments");

                    b.Navigation("Classrooms");

                    b.Navigation("Exams");

                    b.Navigation("SectionTypeSections");

                    b.Navigation("StudentSections");

                    b.Navigation("TeacherSections");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Student", b =>
                {
                    b.Navigation("Inscriptions");

                    b.Navigation("Notifications");

                    b.Navigation("Registrations");

                    b.Navigation("Schedules");

                    b.Navigation("StudentSections");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.StudentExperience", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Teacher", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Notifications");

                    b.Navigation("Registrations");

                    b.Navigation("TeacherSections");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherExperience", b =>
                {
                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TeacherForum", b =>
                {
                    b.Navigation("Classroom");

                    b.Navigation("Evidences");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.Topic", b =>
                {
                    b.Navigation("GeneralInformations");

                    b.Navigation("URLS");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeCalification", b =>
                {
                    b.Navigation("CalificationSystemTypeCalifications");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeProgrammingClass", b =>
                {
                    b.Navigation("ProgrammingStudies");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeSection", b =>
                {
                    b.Navigation("SectionTypeSections");
                });

            modelBuilder.Entity("BitCollegeWeb.Domain.TypeStudy", b =>
                {
                    b.Navigation("ProgrammingStudies");
                });
#pragma warning restore 612, 618
        }
    }
}
